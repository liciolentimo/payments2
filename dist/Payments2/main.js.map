{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/forgot-password/forgot-password.component.css","webpack:///./src/app/components/forgot-password/forgot-password.component.html","webpack:///./src/app/components/forgot-password/forgot-password.component.ts","webpack:///./src/app/components/sign-in/sign-in.component.css","webpack:///./src/app/components/sign-in/sign-in.component.html","webpack:///./src/app/components/sign-in/sign-in.component.ts","webpack:///./src/app/components/sign-up/sign-up.component.css","webpack:///./src/app/components/sign-up/sign-up.component.html","webpack:///./src/app/components/sign-up/sign-up.component.ts","webpack:///./src/app/components/verify-email/verify-email.component.css","webpack:///./src/app/components/verify-email/verify-email.component.html","webpack:///./src/app/components/verify-email/verify-email.component.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/guard/secure-inner-pages.guard.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { SecureInnerPagesGuard } from './shared/guard/secure-inner-pages.guard';\nimport { AuthGuard } from './shared/guard/auth.guard';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent,canActivate: [SecureInnerPagesGuard] },\n  { path: 'register-user', component: SignUpComponent,canActivate: [SecureInnerPagesGuard] },\n  { path: 'dashboard', component: DashboardComponent,canActivate: [AuthGuard] },\n  { path: 'forgot-password', component: ForgotPasswordComponent,canActivate: [SecureInnerPagesGuard] },\n  { path: 'verify-email-address', component: VerifyEmailComponent,canActivate: [SecureInnerPagesGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Payments2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { AuthService } from './shared/services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    SignInComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Top navigation -->\\n<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\n  <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\" routerLink=\\\"/register-student\\\">\\n    <span class=\\\"dasboard-text\\\">Dashboard</span>\\n  </a>\\n</nav>\\n\\n<!-- Sidebar navigation -->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n\\n    <nav class=\\\"col-md-2 d-md-block bg-light sidebar\\\">\\n      <div class=\\\"sidebar-sticky\\\">\\n        <ul class=\\\"nav flex-column\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\">\\n              <i class=\\\"fas fa-user\\\"></i>User Profile\\n            </a>\\n          </li>\\n          <!-- Calling SignOut() Api from AuthService -->\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" (click)=\\\"authService.SignOut()\\\">\\n              <i class=\\\"fas fa-sign-out-alt\\\"></i>Log out\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </nav>\\n\\n    <!-- Main content -->\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\n      <div class=\\\"inner-adjust\\\">\\n\\n        <div class=\\\"pt-3 pb-2 mb-3 border-bottom\\\">\\n          <h1 class=\\\"h2\\\">User Profile</h1>\\n        </div>\\n        <!-- Show user data when logged in -->\\n        <div class=\\\"row\\\" *ngIf=\\\"authService.userData as user\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"media\\\">\\n              <img class=\\\"align-self-start mr-5 img-thumbnail rounded-circle\\\" src=\\\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\\\"\\n                alt=\\\"{{user.displayName}}\\\">\\n              <div class=\\\"media-body\\\">\\n                <h1>Hello: <strong>{{(user.displayName) ? user.displayName : 'User'}}</strong></h1>\\n                <p>User ID: <strong>{{user.uid}}</strong></p>\\n                <p>Email: <strong>{{user.email}}</strong></p>\\n                <p>Email Verified: <strong>{{user.emailVerified}}</strong></p>\\n\\n                <h2 id=\\\"send\\\">Send Money</h2>\\n                <form>\\n                    <div class=\\\"formGroup\\\">\\n                  <input type=\\\"number\\\" class=\\\"formControl\\\" placeholder=\\\"Enter phone number\\\">\\n                  </div>\\n                  <div class=\\\"formGroup\\\">\\n                  <input type=\\\"number\\\" class=\\\"formControl\\\" placeholder=\\\"Enter amount\\\">\\n                  </div>\\n                  <div class=\\\"formGroup\\\">\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Send</button>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </main>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n    <div class=\\\"authBlock\\\">\\n      <h3>Reset Password</h3>\\n\\n      <p class=\\\"text-center\\\">Please enter your email address to request a password reset.</p>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"email\\\" class=\\\"formControl\\\" placeholder=\\\"Email Address\\\" #passwordResetEmail required>\\n      </div>\\n\\n      <!-- Calling ForgotPassword from AuthService Api -->\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"submit\\\" class=\\\"btn btnPrimary\\\" value=\\\"Reset Password\\\" (click)=\\\"authService.ForgotPassword(passwordResetEmail.value)\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Go back to ? <span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\">Log In</span></span>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n\\n    <div class=\\\"px-logo\\\">\\n      <h2>Payments</h2>\\n    </div>\\n\\n    <div class=\\\"authBlock\\\">\\n      <h3>Sign In</h3>\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"text\\\" class=\\\"formControl\\\" placeholder=\\\"Username\\\" #userName required>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"password\\\" class=\\\"formControl\\\" placeholder=\\\"Password\\\" #userPassword required>\\n      </div>\\n\\n      <!-- Calling SignIn Api from AuthService -->\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"button\\\" class=\\\"btn btnPrimary\\\" value=\\\"Log in\\\" (click)=\\\"authService.SignIn(userName.value, userPassword.value)\\\">\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <span class=\\\"or\\\"><span class=\\\"orInner\\\">Or</span></span>\\n      </div>\\n\\n      <!-- Calling GoogleAuth Api from AuthService -->\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"button\\\" class=\\\"btn googleBtn\\\" (click)=\\\"authService.GoogleAuth()\\\">\\n          <i class=\\\"fab fa-google-plus-g\\\"></i>\\n          Log in with Google\\n        </button>\\n      </div>\\n\\n      <div class=\\\"forgotPassword\\\">\\n        <span routerLink=\\\"/forgot-password\\\">Forgot Password?</span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Don't have an account?<span class=\\\"redirect\\\" routerLink=\\\"/register-user\\\"> Sign Up</span></span>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n\\n    <div class=\\\"px-logo\\\">\\n      <h2>Payments</h2>\\n    </div>\\n\\n    <div class=\\\"authBlock\\\">\\n      <h3>Sign Up</h3>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"email\\\" class=\\\"formControl\\\" placeholder=\\\"Email Address\\\" #userEmail required>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"password\\\" class=\\\"formControl\\\" placeholder=\\\"Password\\\" #userPwd required>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <input type=\\\"button\\\" class=\\\"btn btnPrimary\\\" value=\\\"Sign Up\\\" (click)=\\\"authService.SignUp(userEmail.value, userPwd.value)\\\">\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <span class=\\\"or\\\"><span class=\\\"orInner\\\">Or</span></span>\\n      </div>\\n\\n      <!-- Continue with Google -->\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"button\\\" class=\\\"btn googleBtn\\\" (click)=\\\"authService.GoogleAuth()\\\">\\n          <i class=\\\"fab fa-google-plus-g\\\"></i>\\n          Continue with Google\\n        </button>\\n      </div>\\n      \\n    </div>\\n\\n    <div class=\\\"redirectToLogin\\\">\\n      <span>Already have an account? <span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\">Log In</span></span>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdmVyaWZ5LWVtYWlsL3ZlcmlmeS1lbWFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"displayTable\\\">\\n  <div class=\\\"displayTableCell\\\">\\n  <div class=\\\"authBlock\\\">\\n  <h3>Thank You for Registering</h3>\\n  <div class=\\\"formGroup\\\" *ngIf=\\\"authService.userData as user\\\">\\n  <p class=\\\"text-center\\\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\\n  <p class=\\\"text-center\\\">Please check your email and click on the link to verfiy your email address.</p>\\n  </div>\\n  <!-- Calling SendVerificationMail() method using authService Api -->\\n  <div class=\\\"formGroup\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btnPrimary\\\" (click)=\\\"authService.SendVerificationMail()\\\">\\n  <i class=\\\"fas fa-redo-alt\\\"></i>\\n  Resend Verification Email\\n  </button>\\n  </div>\\n  </div>\\n  <div class=\\\"redirectToLogin\\\">\\n  <span>Go back to?<span class=\\\"redirect\\\" routerLink=\\\"/sign-in\\\"> Sign in</span></span>\\n  </div>\\n  </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router\n    ){ }\n    canActivate(\n      next: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if(this.authService.isLoggedIn !== true) {\n      this.router.navigate(['sign-in'])\n      }\n      return true;\n}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecureInnerPagesGuard implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router\n    ) { }\n    canActivate(\n      next: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if(this.authService.isLoggedIn) {\n      window.alert(\"You are not allowed to access this URL!\");\n      this.router.navigate(['dashboard'])\n      }\n      return true;\n      }\n      }","import { Injectable, NgZone } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { User } from './user';\nimport { auth } from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  userData: any; // Save logged in user data\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\npublic afAuth: AngularFireAuth, // Inject Firebase auth service\npublic router: Router,  \npublic ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {\n   /* Saving user data in localstorage when \n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Sign up with email/password\n  SignUp(email, password) {\n    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign \n        up and returns promise */\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Send email verfificaiton when new user sign up\n  SendVerificationMail() {\n    return this.afAuth.auth.currentUser.sendEmailVerification()\n    .then(() => {\n      this.router.navigate(['verify-email-address']);\n    })\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.auth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.auth.signInWithPopup(provider)\n    .then((result) => {\n       this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  /* Setting up user data when sign in with username/password, \n  sign up with username/password and sign in with social auth  \n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n  // Sign out \n  SignOut() {\n    return this.afAuth.auth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAP1SfWdDQZKQcxLt8ZU5uCb5MjoDiKfj4\",\n    authDomain: \"payments-1fe5e.firebaseapp.com\",\n    databaseURL: \"https://payments-1fe5e.firebaseio.com\",\n    projectId: \"payments-1fe5e\",\n    storageBucket: \"payments-1fe5e.appspot.com\",\n    messagingSenderId: \"713032516121\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}